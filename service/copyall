#!/bin/bash
set -eux

: =================================================
#: Copy all EXODUS dictionaries and programs to live
: Copy all EXODUS programs to live
: =================================================
:
: 'Syntax is ./copyall [CONFIRM]'
:
: '  ./copyall                 # dry run'
:
: '  ./copyall CONFIRM         # really does it'

:
: EXODUS installed in
: ===================

	EXODUS=~/exodus

:
: Dry run or not
: ==============
:
	DRYRUN=--dry-run
	if [ "${1:-}" = "CONFIRM" ]; then
		DRYRUN=
	elif [ "${1:-}" != "" ]; then
:		Invalid syntax
		exit 1
	fi

:
: Create exodus_live database if not present
: ==========================================
:
	listfiles exodus_live > /dev/null || dbcreate exodus_live

#:
#: Copy all dictionaries from exodus to exodus_live
#: ================================================
#:
#: Use --clean option to drop dict files before importing them
#:
#	if [ -z $DRYRUN ]; then
#		sudo -u postgres pg_dump --clean -t 'dict.*' exodus|sudo -u postgres psql exodus_live
#	else
#:
#:		$DRYRUN --- Skipping ---
#:		==========================
#:
#:		"~/exodus/service# sudo -u postgres pg_dump --clean -t 'dict.*' exodus|psql exodus_live"
#	fi

:
: Install the latest version of the neomail script into test
: ==========================================================
:
	rsync -av --whole-file $EXODUS/service/neomail ~/bin

:
: Create a directory for live services binaries
: =============================================
:
: May be used for EXODUS environment variable "EXO_HOME"
:
	mkdir -p $HOME/live

:
: Copy all bin, lib and dat files to live
: =======================================
:
:	MUST use 'whole file' option to ensure that the OS dlopen understands everything has changed
:	otherwise new code may not become active and/or undefined behaviour i.e. crashes etc.
:
	#rsync -av ~/bin ~/lib ~/inc ~/live
	#rsync -a ~/{bin,lib,inc} ~/live
	#rsync -av --delete ~/{bin,lib} ~/live
	rsync $DRYRUN -av --whole-file ~/{bin,lib,dat} ~/live

:
: Finished $DRYRUN copying EXOXUS programs to live in $(($SECONDS / 60)) minutes and $(($SECONDS % 60)) seconds.
: =========================================================================
:
: Warn DRYRUN if not CONFIRMed, or Restart required if CONFIRMed
: ==============================================================
:
	if [[ -n "$DRYRUN" ]]; then
		tput setaf 1
:
: =============================================================================
: DRYRUN - - no CONFIRM provided
: =============================================================================
		tput sgr0
	else
:
: =============================
: Restarting all live processes
: =============================
:
	touch ~/live/{bin,lib,dat}
	fi

