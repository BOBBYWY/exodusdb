//generated by exodus "compile ../sys/autorun2"
//#ifndef EXODUSDLFUNC_AUTORUN2_H
#define EXODUSDLFUNC_AUTORUN2_H

//a member variable/object to cache a pointer/object for the shared library function
//ExodusFunctorBase efb_autorun2;
class efb_autorun2 : public ExodusFunctorBase
{
public:

efb_autorun2(MvEnvironment& mv) : ExodusFunctorBase("autorun2", "exodusprogrambasecreatedelete_", mv) {}

efb_autorun2& operator=(const var& newlibraryname) {
        closelib();
        libraryname_=newlibraryname.toString();
        return (*this);
}

//a member function with the right arguments, returning a var or void
var operator() (in mode0, in title0, in module, in request, in data0, in runasusercode0, in targetusercodes0, io document0, io docid, out msg)
{

 //first time link to the shared lib and create/cache an object from it
 //passing current standard variables in mv
 //first time link to the shared lib and create/cache an object from it
 //passing current standard variables in mv
 //if (efb_getlang.pmemberfunction_==NULL)
 // efb_getlang.init("getlang","exodusprogrambasecreatedelete_",mv);
 if (this->pmemberfunction_==NULL)
  this->init();

 //define a function type (pExodusProgramBaseMemberFunction)
 //that can call the shared library object member function
 //with the right arguments and returning a var or void
 typedef var (ExodusProgramBase::*pExodusProgramBaseMemberFunction)(in,in,in,in,in,in,in,io,io,out);

 //call the shared library object main function with the right args,
 // returning a var or void
 //return CALLMEMBERFUNCTION(*(efb_autorun2.pobject_),
 //((pExodusProgramBaseMemberFunction) (efb_autorun2.pmemberfunction_)))
 // (mode);
 return CALLMEMBERFUNCTION(*(this->pobject_),
 ((pExodusProgramBaseMemberFunction) (this->pmemberfunction_)))
  (mode0,title0,module,request,data0,runasusercode0,targetusercodes0,document0,docid,msg);

}

var operator() () {
 var mode0_in;
 var title0_in;
 var module_in;
 var request_in;
 var data0_in;
 var runasusercode0_in;
 var targetusercodes0_in;
 var document0_io;
 var docid_io;
 var msg_out;
 return operator()(mode0_in, title0_in, module_in, request_in, data0_in, runasusercode0_in, targetusercodes0_in, document0_io, docid_io, msg_out);
}

var operator() (in mode0) {
 var title0_in;
 var module_in;
 var request_in;
 var data0_in;
 var runasusercode0_in;
 var targetusercodes0_in;
 var document0_io;
 var docid_io;
 var msg_out;
 return operator()(mode0, title0_in, module_in, request_in, data0_in, runasusercode0_in, targetusercodes0_in, document0_io, docid_io, msg_out);
}

var operator() (in mode0, in title0) {
 var module_in;
 var request_in;
 var data0_in;
 var runasusercode0_in;
 var targetusercodes0_in;
 var document0_io;
 var docid_io;
 var msg_out;
 return operator()(mode0, title0, module_in, request_in, data0_in, runasusercode0_in, targetusercodes0_in, document0_io, docid_io, msg_out);
}

var operator() (in mode0, in title0, in module) {
 var request_in;
 var data0_in;
 var runasusercode0_in;
 var targetusercodes0_in;
 var document0_io;
 var docid_io;
 var msg_out;
 return operator()(mode0, title0, module, request_in, data0_in, runasusercode0_in, targetusercodes0_in, document0_io, docid_io, msg_out);
}

var operator() (in mode0, in title0, in module, in request) {
 var data0_in;
 var runasusercode0_in;
 var targetusercodes0_in;
 var document0_io;
 var docid_io;
 var msg_out;
 return operator()(mode0, title0, module, request, data0_in, runasusercode0_in, targetusercodes0_in, document0_io, docid_io, msg_out);
}

var operator() (in mode0, in title0, in module, in request, in data0) {
 var runasusercode0_in;
 var targetusercodes0_in;
 var document0_io;
 var docid_io;
 var msg_out;
 return operator()(mode0, title0, module, request, data0, runasusercode0_in, targetusercodes0_in, document0_io, docid_io, msg_out);
}

var operator() (in mode0, in title0, in module, in request, in data0, in runasusercode0) {
 var targetusercodes0_in;
 var document0_io;
 var docid_io;
 var msg_out;
 return operator()(mode0, title0, module, request, data0, runasusercode0, targetusercodes0_in, document0_io, docid_io, msg_out);
}

var operator() (in mode0, in title0, in module, in request, in data0, in runasusercode0, in targetusercodes0) {
 var document0_io;
 var docid_io;
 var msg_out;
 return operator()(mode0, title0, module, request, data0, runasusercode0, targetusercodes0, document0_io, docid_io, msg_out);
}

var operator() (in mode0, in title0, in module, in request, in data0, in runasusercode0, in targetusercodes0, io document0) {
 var docid_io;
 var msg_out;
 return operator()(mode0, title0, module, request, data0, runasusercode0, targetusercodes0, document0, docid_io, msg_out);
}

var operator() (in mode0, in title0, in module, in request, in data0, in runasusercode0, in targetusercodes0, io document0, io docid) {
 var msg_out;
 return operator()(mode0, title0, module, request, data0, runasusercode0, targetusercodes0, document0, docid, msg_out);
}

};
efb_autorun2 autorun2{mv};
//#endif
