//generated by exodus "compile getlang"
//#ifndef EXODUSDLFUNC_GETLANG_H
#define EXODUSDLFUNC_GETLANG_H

//a member variable/object to cache a pointer/object for the shared library function
//ExodusFunctorBase efb_getlang;
class efb_getlang : public ExodusFunctorBase
{
public:

efb_getlang(MvEnvironment& mv) : ExodusFunctorBase("getlang", "exodusprogrambasecreatedelete_", mv) {}

efb_getlang& operator=(const var& newlibraryname) {
        closelib();
        libraryname_=newlibraryname.toString();
        return (*this);
}

//a member function with the right arguments, returning a var or void
var operator() (in origprogname, in languagecode0, in origdatatype, io languagefile, io lang)
{

 //first time link to the shared lib and create/cache an object from it
 //passing current standard variables in mv
 //first time link to the shared lib and create/cache an object from it
 //passing current standard variables in mv
 //if (efb_getlang.pmemberfunction_==NULL)
 // efb_getlang.init("getlang","exodusprogrambasecreatedelete_",mv);
 if (this->pmemberfunction_==NULL)
  this->init();

 //define a function type (pExodusProgramBaseMemberFunction)
 //that can call the shared library object member function
 //with the right arguments and returning a var or void
 typedef var (ExodusProgramBase::*pExodusProgramBaseMemberFunction)(in,in,in,io,io);

 //call the shared library object main function with the right args,
 // returning a var or void
 //return CALLMEMBERFUNCTION(*(efb_getlang.pobject_),
 //((pExodusProgramBaseMemberFunction) (efb_getlang.pmemberfunction_)))
 // (mode);
 return CALLMEMBERFUNCTION(*(this->pobject_),
 ((pExodusProgramBaseMemberFunction) (this->pmemberfunction_)))
  (origprogname,languagecode0,origdatatype,languagefile,lang);

}

var operator() () {
 var origprogname_in;
 var languagecode0_in;
 var origdatatype_in;
 var languagefile_io;
 var lang_io;
 return operator()(origprogname_in, languagecode0_in, origdatatype_in, languagefile_io, lang_io);
}

var operator() (in origprogname) {
 var languagecode0_in;
 var origdatatype_in;
 var languagefile_io;
 var lang_io;
 return operator()(origprogname, languagecode0_in, origdatatype_in, languagefile_io, lang_io);
}

var operator() (in origprogname, in languagecode0) {
 var origdatatype_in;
 var languagefile_io;
 var lang_io;
 return operator()(origprogname, languagecode0, origdatatype_in, languagefile_io, lang_io);
}

var operator() (in origprogname, in languagecode0, in origdatatype) {
 var languagefile_io;
 var lang_io;
 return operator()(origprogname, languagecode0, origdatatype, languagefile_io, lang_io);
}

var operator() (in origprogname, in languagecode0, in origdatatype, io languagefile) {
 var lang_io;
 return operator()(origprogname, languagecode0, origdatatype, languagefile, lang_io);
}

};
efb_getlang getlang{mv};
//#endif
