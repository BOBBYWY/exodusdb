//generated by exodus "compile amountinwords"
//#ifndef EXODUSDLFUNC_AMOUNTINWORDS_H
#define EXODUSDLFUNC_AMOUNTINWORDS_H

//a member variable/object to cache a pointer/object for the shared library function
//ExodusFunctorBase efb_amountinwords;
class efb_amountinwords : public ExodusFunctorBase
{
public:

efb_amountinwords(MvEnvironment& mv) : ExodusFunctorBase("amountinwords", "exodusprogrambasecreatedelete_", mv) {}

efb_amountinwords& operator=(const var& newlibraryname) {
        closelib();
        libraryname_=newlibraryname.toString();
        return (*this);
}

//a member function with the right arguments, returning a var or void
var operator() (in amountfmlanguage, in currcode0)
{

 //first time link to the shared lib and create/cache an object from it
 //passing current standard variables in mv
 //first time link to the shared lib and create/cache an object from it
 //passing current standard variables in mv
 //if (efb_getlang.pmemberfunction_==NULL)
 // efb_getlang.init("getlang","exodusprogrambasecreatedelete_",mv);
 if (this->pmemberfunction_==NULL)
  this->init();

 //define a function type (pExodusProgramBaseMemberFunction)
 //that can call the shared library object member function
 //with the right arguments and returning a var or void
 typedef var (ExodusProgramBase::*pExodusProgramBaseMemberFunction)(in,in);

 //call the shared library object main function with the right args,
 // returning a var or void
 //return CALLMEMBERFUNCTION(*(efb_amountinwords.pobject_),
 //((pExodusProgramBaseMemberFunction) (efb_amountinwords.pmemberfunction_)))
 // (mode);
 return CALLMEMBERFUNCTION(*(this->pobject_),
 ((pExodusProgramBaseMemberFunction) (this->pmemberfunction_)))
  (amountfmlanguage,currcode0);

}

var operator() () {
 var amountfmlanguage_in;
 var currcode0_in;
 return operator()(amountfmlanguage_in, currcode0_in);
}

var operator() (in amountfmlanguage) {
 var currcode0_in;
 return operator()(amountfmlanguage, currcode0_in);
}

};
efb_amountinwords amountinwords{mv};
//#endif
