//generated by exodus "compile ../add/v119"
//#ifndef EXODUSDLFUNC_V119_H
#define EXODUSDLFUNC_V119_H

//a member variable/object to cache a pointer/object for the shared library function
//ExodusFunctorBase efb_v119;
class efb_v119 : public ExodusFunctorBase
{
public:

efb_v119(MvEnvironment& mv) : ExodusFunctorBase("v119", "exodusprogrambasecreatedelete_", mv) {}

efb_v119& operator=(const var& newlibraryname) {
        closelib();
        libraryname_=newlibraryname.toString();
        return (*this);
}

//a member function with the right arguments, returning a var or void
var operator() (in arg1, in arg2, in arg3, in arg4, io data, in arg6)
{

 //first time link to the shared lib and create/cache an object from it
 //passing current standard variables in mv
 //first time link to the shared lib and create/cache an object from it
 //passing current standard variables in mv
 //if (efb_getlang.pmemberfunction_==NULL)
 // efb_getlang.init("getlang","exodusprogrambasecreatedelete_",mv);
 if (this->pmemberfunction_==NULL)
  this->init();

 //define a function type (pExodusProgramBaseMemberFunction)
 //that can call the shared library object member function
 //with the right arguments and returning a var or void
 typedef var (ExodusProgramBase::*pExodusProgramBaseMemberFunction)(in,in,in,in,io,in);

 //call the shared library object main function with the right args,
 // returning a var or void
 //return CALLMEMBERFUNCTION(*(efb_v119.pobject_),
 //((pExodusProgramBaseMemberFunction) (efb_v119.pmemberfunction_)))
 // (mode);
 return CALLMEMBERFUNCTION(*(this->pobject_),
 ((pExodusProgramBaseMemberFunction) (this->pmemberfunction_)))
  (arg1,arg2,arg3,arg4,data,arg6);

}

var operator() () {
 var arg1_in;
 var arg2_in;
 var arg3_in;
 var arg4_in;
 var data_io;
 var arg6_in;
 return operator()(arg1_in, arg2_in, arg3_in, arg4_in, data_io, arg6_in);
}

var operator() (in arg1) {
 var arg2_in;
 var arg3_in;
 var arg4_in;
 var data_io;
 var arg6_in;
 return operator()(arg1, arg2_in, arg3_in, arg4_in, data_io, arg6_in);
}

var operator() (in arg1, in arg2) {
 var arg3_in;
 var arg4_in;
 var data_io;
 var arg6_in;
 return operator()(arg1, arg2, arg3_in, arg4_in, data_io, arg6_in);
}

var operator() (in arg1, in arg2, in arg3) {
 var arg4_in;
 var data_io;
 var arg6_in;
 return operator()(arg1, arg2, arg3, arg4_in, data_io, arg6_in);
}

var operator() (in arg1, in arg2, in arg3, in arg4) {
 var data_io;
 var arg6_in;
 return operator()(arg1, arg2, arg3, arg4, data_io, arg6_in);
}

var operator() (in arg1, in arg2, in arg3, in arg4, io data) {
 var arg6_in;
 return operator()(arg1, arg2, arg3, arg4, data, arg6_in);
}

};
efb_v119 v119{mv};
//#endif
