//generated by exodus "compile ../add/pushsession"
//#ifndef EXODUSDLFUNC_PUSHSESSION_H
#define EXODUSDLFUNC_PUSHSESSION_H

//a member variable/object to cache a pointer/object for the shared library function
//ExodusFunctorBase efb_pushsession;
class efb_pushsession : private ExodusFunctorBase
{
public:

efb_pushsession(MvEnvironment& mv) : ExodusFunctorBase("pushsession", "exodusprogrambasecreatedelete_", mv) {}

efb_pushsession& operator=(const var& newlibraryname) {
        closelib();
        libraryname_=newlibraryname.toString();
        return (*this);
}

//a member function with the right arguments, returning a var or void
var operator() (out v1, out v2, out v3, out v4, out v5, out v6)
{

 //first time link to the shared lib and create/cache an object from it
 //passing current standard variables in mv
 //first time link to the shared lib and create/cache an object from it
 //passing current standard variables in mv
 //if (efb_getlang.pmemberfunction_==NULL)
 // efb_getlang.init("getlang","exodusprogrambasecreatedelete_",mv);
 if (this->pmemberfunction_==NULL)
  this->init();

 //define a function type (pExodusProgramBaseMemberFunction)
 //that can call the shared library object member function
 //with the right arguments and returning a var or void
 typedef var (ExodusProgramBase::*pExodusProgramBaseMemberFunction)(out,out,out,out,out,out);

 //call the shared library object main function with the right args,
 // returning a var or void
 //return CALLMEMBERFUNCTION(*(efb_pushsession.pobject_),
 //((pExodusProgramBaseMemberFunction) (efb_pushsession.pmemberfunction_)))
 // (mode);
 return CALLMEMBERFUNCTION(*(this->pobject_),
 ((pExodusProgramBaseMemberFunction) (this->pmemberfunction_)))
  (v1,v2,v3,v4,v5,v6);

}

var operator() () {
 var v1_out;
 var v2_out;
 var v3_out;
 var v4_out;
 var v5_out;
 var v6_out;
 return operator()(v1_out, v2_out, v3_out, v4_out, v5_out, v6_out);
}

var operator() (out v1) {
 var v2_out;
 var v3_out;
 var v4_out;
 var v5_out;
 var v6_out;
 return operator()(v1, v2_out, v3_out, v4_out, v5_out, v6_out);
}

var operator() (out v1, out v2) {
 var v3_out;
 var v4_out;
 var v5_out;
 var v6_out;
 return operator()(v1, v2, v3_out, v4_out, v5_out, v6_out);
}

var operator() (out v1, out v2, out v3) {
 var v4_out;
 var v5_out;
 var v6_out;
 return operator()(v1, v2, v3, v4_out, v5_out, v6_out);
}

var operator() (out v1, out v2, out v3, out v4) {
 var v5_out;
 var v6_out;
 return operator()(v1, v2, v3, v4, v5_out, v6_out);
}

var operator() (out v1, out v2, out v3, out v4, out v5) {
 var v6_out;
 return operator()(v1, v2, v3, v4, v5, v6_out);
}

};
efb_pushsession pushsession{mv};
//#endif
