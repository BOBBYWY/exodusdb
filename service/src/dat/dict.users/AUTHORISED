S

Authorised
S



#include <authorised.h>\
\
#include <srv_common.h>\
\
var usern;\
var ans; //num\
var userx;\
\
function main() {\
	#include <service_common.h>\
	if (ID == "EXODUS") {\
		goto unknown;\
	}\
	if (SECURITY.f(1).locate(USERNAME, usern)) {\
		if (authorised("TIMESHEET ADMINISTRATOR")) {\
			ans = 1;\
			return ans;\
		}\
	// may not be allowed to access higher users/groups\
		if (usern > RECORD.f(11)) {\
			ans = authorised("AUTHORISATION UPDATE HIGHER GROUPS");\
		} else {\
\
		// look for the user in the same group as the active user\
			for (const var usern2 : range(usern, 9999)) {\
				userx = SECURITY.f(1, usern2);\
				// /BREAK;\
				if (not((userx and userx != "---") and userx != ID))\
					break;\
			} // usern2;\
\
		// if found then same group therefore ok\
			if (userx == ID) {\
				ans = 1;\
			} else {\
\
			// not found therefore possibly not allowed access\
				ans = authorised("AUTHORISATION UPDATE LOWER GROUPS");\
\
			}\
		}\
	} else {\
unknown:\
		ans = USERNAME == "EXODUS";\
	}\
	return ans;\
}
L
10

















0
