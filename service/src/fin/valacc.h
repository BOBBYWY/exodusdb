//generated by exodus "compile ../fin/valacc"
//#ifndef EXODUSDLFUNC_VALACC_H
#define EXODUSDLFUNC_VALACC_H

//a member variable/object to cache a pointer/object for the shared library function
//ExodusFunctorBase efb_valacc;
class efb_valacc : public ExodusFunctorBase
{
public:

efb_valacc(MvEnvironment& mv) : ExodusFunctorBase("valacc", "exodusprogrambasecreatedelete_", mv) {}

efb_valacc& operator=(const var& newlibraryname) {
        closelib();
        libraryname_=newlibraryname.toString();
        return (*this);
}

//a member function with the right arguments, returning a var or void
var operator() (in mode0, io is, io isorig, in validaccs0, io msg, io acctype)
{

 //first time link to the shared lib and create/cache an object from it
 //passing current standard variables in mv
 //first time link to the shared lib and create/cache an object from it
 //passing current standard variables in mv
 //if (efb_getlang.pmemberfunction_==NULL)
 // efb_getlang.init("getlang","exodusprogrambasecreatedelete_",mv);
 if (this->pmemberfunction_==NULL)
  this->init();

 //define a function type (pExodusProgramBaseMemberFunction)
 //that can call the shared library object member function
 //with the right arguments and returning a var or void
 typedef var (ExodusProgramBase::*pExodusProgramBaseMemberFunction)(in,io,io,in,io,io);

 //call the shared library object main function with the right args,
 // returning a var or void
 //return CALLMEMBERFUNCTION(*(efb_valacc.pobject_),
 //((pExodusProgramBaseMemberFunction) (efb_valacc.pmemberfunction_)))
 // (mode);
 return CALLMEMBERFUNCTION(*(this->pobject_),
 ((pExodusProgramBaseMemberFunction) (this->pmemberfunction_)))
  (mode0,is,isorig,validaccs0,msg,acctype);

}

var operator() () {
 var mode0_in;
 var is_io;
 var isorig_io;
 var validaccs0_in;
 var msg_io;
 var acctype_io;
 return operator()(mode0_in, is_io, isorig_io, validaccs0_in, msg_io, acctype_io);
}

var operator() (in mode0) {
 var is_io;
 var isorig_io;
 var validaccs0_in;
 var msg_io;
 var acctype_io;
 return operator()(mode0, is_io, isorig_io, validaccs0_in, msg_io, acctype_io);
}

var operator() (in mode0, io is) {
 var isorig_io;
 var validaccs0_in;
 var msg_io;
 var acctype_io;
 return operator()(mode0, is, isorig_io, validaccs0_in, msg_io, acctype_io);
}

var operator() (in mode0, io is, io isorig) {
 var validaccs0_in;
 var msg_io;
 var acctype_io;
 return operator()(mode0, is, isorig, validaccs0_in, msg_io, acctype_io);
}

var operator() (in mode0, io is, io isorig, in validaccs0) {
 var msg_io;
 var acctype_io;
 return operator()(mode0, is, isorig, validaccs0, msg_io, acctype_io);
}

var operator() (in mode0, io is, io isorig, in validaccs0, io msg) {
 var acctype_io;
 return operator()(mode0, is, isorig, validaccs0, msg, acctype_io);
}

};
efb_valacc valacc{mv};
//#endif
