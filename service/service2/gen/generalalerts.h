//generated by exodus "compile ../gen/generalalerts"
//#ifndef EXODUSDLFUNC_GENERALALERTS_H
#define EXODUSDLFUNC_GENERALALERTS_H

//a member variable/object to cache a pointer/object for the shared library function
//ExodusFunctorBase efb_generalalerts;
class efb_generalalerts : private ExodusFunctorBase
{
public:

efb_generalalerts(MvEnvironment& mv) : ExodusFunctorBase("generalalerts", "exodusprogrambasecreatedelete_", mv) {}

efb_generalalerts& operator=(const var& newlibraryname) {
        closelib();
        libraryname_=newlibraryname.toString();
        return (*this);
}

//a member function with the right arguments, returning a var or void
var operator() (in alerttype0, in runasuser, out tasks, out title, out request, out datax)
{

 //first time link to the shared lib and create/cache an object from it
 //passing current standard variables in mv
 //first time link to the shared lib and create/cache an object from it
 //passing current standard variables in mv
 //if (efb_getlang.pmemberfunction_==NULL)
 // efb_getlang.init("getlang","exodusprogrambasecreatedelete_",mv);
 if (this->pmemberfunction_==NULL)
  this->init();

 //define a function type (pExodusProgramBaseMemberFunction)
 //that can call the shared library object member function
 //with the right arguments and returning a var or void
 typedef var (ExodusProgramBase::*pExodusProgramBaseMemberFunction)(in,in,out,out,out,out);

 //call the shared library object main function with the right args,
 // returning a var or void
 //return CALLMEMBERFUNCTION(*(efb_generalalerts.pobject_),
 //((pExodusProgramBaseMemberFunction) (efb_generalalerts.pmemberfunction_)))
 // (mode);
 return CALLMEMBERFUNCTION(*(this->pobject_),
 ((pExodusProgramBaseMemberFunction) (this->pmemberfunction_)))
  (alerttype0,runasuser,tasks,title,request,datax);

}

var operator() (in alerttype0, in runasuser, out tasks, out title, out request, in datax=var()) {
 var datax_out;
 if (datax.assigned()) datax_out=datax;
 return operator()(alerttype0,runasuser,tasks,title,request,datax_out);
}

var operator() (in alerttype0, in runasuser, out tasks, out title, in request=var(), in datax=var()) {
 var datax_out;
 if (datax.assigned()) datax_out=datax;
 var request_out;
 if (request.assigned()) request_out=request;
 return operator()(alerttype0,runasuser,tasks,title,request_out,datax_out);
}

var operator() (in alerttype0, in runasuser, out tasks, in title=var(), in request=var(), in datax=var()) {
 var datax_out;
 if (datax.assigned()) datax_out=datax;
 var request_out;
 if (request.assigned()) request_out=request;
 var title_out;
 if (title.assigned()) title_out=title;
 return operator()(alerttype0,runasuser,tasks,title_out,request_out,datax_out);
}

var operator() (in alerttype0, in runasuser, in tasks=var(), in title=var(), in request=var(), in datax=var()) {
 var datax_out;
 if (datax.assigned()) datax_out=datax;
 var request_out;
 if (request.assigned()) request_out=request;
 var title_out;
 if (title.assigned()) title_out=title;
 var tasks_out;
 if (tasks.assigned()) tasks_out=tasks;
 return operator()(alerttype0,runasuser,tasks_out,title_out,request_out,datax_out);
}

};
efb_generalalerts generalalerts{mv};
//#endif
