#!/bin/bash
set -euxo pipefail

: ===============================================================
: Restore a postgres database from an sql dump to a _test database
: ===============================================================
:
: 'Syntax:'
:
: '  ./doall DBNAME restore_db'
:
: '  ./restore_db DBNAME [BACKUPDIR=~/hosts/EXO_DATA/work]'
:
	LIVE_EXO_DATA=${1:?DBNAME argument is required.}
	#NEW_BACKUP_DIR=${2:-~/backups/sql}
    NEW_BACKUP_DIR=${2:-~/hosts/$LIVE_EXO_DATA/work}

:
: Check Syntax
: ============
:
	if [ -z "LIVE_EXO_DATA"  -o  -z "$NEW_BACKUP_DIR" ]; then
		set +x
		echo 'Syntax is wrong. Cannot continue.'
		exit 1
	fi

:
: Init
: ====
:
	TEST_EXO_DATA=${LIVE_EXO_DATA}_test

:
: Detect if target is running
: ===========================
:
	./service ${LIVE_EXO_DATA} is-active test &> /dev/null && RESTART_REQUIRED=Y || RESTART_REQUIRED=N

:
: Stop the target database
: ========================
:
	[ $RESTART_REQUIRED = Y ] && ./service ${LIVE_EXO_DATA} stop test

#:
#: Give it a little time to stop
#: =============================
#:
#	sleep 5

:
: Kill any test process running the target database
: =================================================
:
	#PIDFILENAME=/run/serve_${APP_CODE}/${APP_CODE}_test@${DB_CODE}.pid
	#save having to assign DB_CODE when executing restore_db directly in cli
	PIDFILENAME=/run/serve_${APP_CODE}/${APP_CODE}_test@${TEST_EXO_DATA/_test/}.pid
	if [ -f $PIDFILENAME ]; then
		kill -TERM `cat $PIDFILENAME` || true
	fi

:
: Kill any existing connections to the target database
: ====================================================
:
: dropdb only has the force option from postgres v13
:
	sudo -u postgres psql -c "SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname = '$TEST_EXO_DATA';"

:
: Drop the target database
: ========================
:
	sudo -u postgres dropdb --if-exists $TEST_EXO_DATA

:
: Create the target database as empty
: ===================================
:
	sudo -u postgres createdb --owner exodus --template template1 $TEST_EXO_DATA
	#sudo -u postgres createdb --owner exodus --template template0 $TEST_EXO_DATA

:
: Restore into the target database
: ================================
:
	#zcat $NEW_BACKUP_DIR/$LIVE_EXO_DATA.sql.gz | sudo -u postgres psql $TEST_EXO_DATA > /dev/null
:   Suppress various "No function matches ..." errors since functions may not be loaded in dependency order
	#Example:
	#ERROR:  function dict_journals_year_period(text, text) does not exist
	#LINE 3:   '20' || dict_journals_year_period(key,data)
	#                  ^
	#HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
	#QUERY:  SELECT split_part(key,'*',1) || '*' || split_part(key,'*',2)
	#  || '*' ||
	#  '20' || dict_journals_year_period(key,data)
	#CONTEXT:  PL/pgSQL function public.dict_journals_company_journal_year_period(text,text) line 9 at assignment
:
	zcat $NEW_BACKUP_DIR/$LIVE_EXO_DATA.sql.gz |\
	sudo -u postgres psql $TEST_EXO_DATA 2>&1 >/dev/null |\
	(egrep -v '(^ERROR:  function |^LINE [0-9]+: |^  |^HINT:  No function matches |^QUERY: |^CONTEXT: )' || true)

:
: Create all pgsql functions
: ==========================
:
	EXO_DATA=$TEST_EXO_DATA dict2sql > /dev/null

:
: Remove all foreign database connections and attachments
: =======================================================
:
	if EXO_DATA=$TEST_EXO_DATA dbattach {L} |& egrep "[a-z ]" ; then
		sudo -u postgres psql -c "ALTER ROLE exodus WITH SUPERUSER;"
		EXO_DATA=$TEST_EXO_DATA dbattach {RRR} || true #ensure access is revoked
		sudo -u postgres psql -c "ALTER ROLE exodus WITH NOSUPERUSER;"
		if EXO_DATA=$TEST_EXO_DATA dbattach {L} |& egrep "[a-z ]" ; then
			:
			: "FAILED to remove all foreign database connections and attachments"
			:
			exit 1
		fi
	fi

	if dblist | grep gg

:
: Optionally restart the target database
: ======================================
:
	if [ "$RESTART_REQUIRED" = "Y" ]; then
		./service ${LIVE_EXO_DATA} start test
	fi

:
: Finished restore_db $1 in $(($SECONDS / 60)) minutes and $(($SECONDS % 60)) seconds.
: ======================================================
