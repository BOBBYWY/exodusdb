//generated by exodus "compile /root/exodus/service/src/sys/list.cpp"
//#ifndefEXODUS_CALLABLE_LIST_H
#define EXODUS_CALLABLE_LIST_H

// A 'callable' class and object that allows function call syntax to actually open shared libraries/create Exodus Program objects on the fly.

class Callable_list : public CallableBase
{
public:

// A constructor providing:
// 1. the name of the shared library to open,
// 2. the name of the function within the shared library that will create an exodus program object,
// 3. and the current program's mv environment to share with it.
Callable_list(ExoEnv& mv) : CallableBase("list", "exodusprogrambasecreatedelete_", mv) {}

// Allow assignment of library name to override the default constructed
using CallableBase::operator=;

// A callable member function with the right arguments, returning a var or void
var operator() ()
{

 // The first call will link to the shared lib and create/cache an object from it.
 // passing current standard variables in mv
 if (this->pmemberfunction_==NULL)
  this->init();

 // Define a function type (pExodusProgramBaseMemberFunction)
 // that can call the shared library object member function
 // with the right arguments and returning a var or void
 using pExodusProgramBaseMemberFunction = auto (ExodusProgramBase::*)() -> var;

 // Call the shared library object main function with the right args,
 //  returning a var or void
 return CALLMEMBERFUNCTION(*(this->pobject_),
 ((pExodusProgramBaseMemberFunction) (this->pmemberfunction_)))
  ();

}
};

// A callable object of the above type that allows function call syntax to access
// an Exodus program/function initialized with the current mv environment.
Callable_list list{mv};
//#endif
